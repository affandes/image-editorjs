!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ImageEditor=e():t.ImageEditor=e()}(window,(function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return t[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(i,a,function(e){return t[e]}.bind(null,a));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);n(1);function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var a=function(){function t(e){var n=e.data,i=e.api,a=e.config;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.api=i,this.data={url:"",caption:"",hasCaption:!0,hasBorder:!1,align:"left"},this.config={placeholder:"Paste image URL here...",urlPatterns:null},this.settingsButton=[{name:"leftAlign",icon:'<i class="fas fa-fw fa-align-left"></i>'},{name:"centerAlign",icon:'<i class="fas fa-fw fa-align-center"></i>'},{name:"rightAlign",icon:'<i class="fas fa-fw fa-align-right"></i>'},{name:"hasBorder",icon:'<i class="fas fa-fw fa-border-style"></i>'},{name:"hasCaption",icon:'<i class="fas fa-fw fa-closed-captioning"></i>'}],Object.assign(this.data,n),Object.assign(this.config,a),this.content=null,this.input=null,this.image=null,this.caption=null,this.settings=null}var e,n,a;return e=t,a=[{key:"toolbox",get:function(){return{title:"Embed Image",icon:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n    <path d="M3.15 13.628A7.749 7.749 0 0 0 10 17.75a7.74 7.74 0 0 0 6.305-3.242l-2.387-2.127-2.765 2.244-4.389-4.496-3.614 3.5zm-.787-2.303l4.446-4.371 4.52 4.63 2.534-2.057 3.533 2.797c.23-.734.354-1.514.354-2.324a7.75 7.75 0 1 0-15.387 1.325zM10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10z"/>\n</svg>'}}},{key:"CLASS",get:function(){return{content:"aff-image-content",input:"aff-image-input",image:"aff-image-figure",label:"aff-image-caption",setting:"aff-image-setting",align:["left-aligned","center-aligned","right-aligned"]}}},{key:"PATTERN",get:function(){return{urlImage:/(http[s]?:\/\/.*?.(jpg|png|gif|svg))/g}}}],(n=[{key:"render",value:function(){return this._setup(),this.content}},{key:"renderSettings",value:function(){return this._setupSettings()}},{key:"validate",value:function(t){return this._isValidImageURL(t.url)}},{key:"_setup",value:function(){this.content=this._createContent()}},{key:"_createContent",value:function(){var e=document.createElement("div");e.classList.add("cdx-block"),e.classList.add(t.CLASS.content);var n=this._createInputBlock(),i=this._createImageBlock();return e.appendChild(n),e.appendChild(i),e}},{key:"_createInputBlock",value:function(){var e=this,n=this._isValidImageURL(this.data.url);this.input=document.createElement("div"),this.input.classList.add("cdx-input"),this.input.contentEditable=!0,this.input.placeholder="Paste image URL here...",this.input.textContent=this.data.url,this.api.listeners.on(this.input,"blur",(function(t){var n=t.target.textContent;e._isValidImageURL(n)?e._showImage(n):console.log("============")}));var i=document.createElement("div");return i.classList.add(t.CLASS.input),i.hidden=n,i.appendChild(this.input),i}},{key:"_createImageBlock",value:function(){var e=this._isValidImageURL(this.data.url),n=document.createElement("figure");return n.classList.add(t.CLASS.image),"left"===this.data.align?n.classList.add(t.CLASS.align[0]):"center"===this.data.align?n.classList.add(t.CLASS.align[1]):"right"===this.data.align&&n.classList.add(t.CLASS.align[2]),n.hidden=!e,this.image=document.createElement("img"),this.image.src=this.data.url,this.caption=document.createElement("figcaption"),this.caption.contentEditable=!0,this.caption.textContent=this.data.caption,this.caption.hidden=!this.data.hasCaption,this.api.listeners.on(this.caption,"focus",(function(t){t.target.classList.add("cdx-input")})),this.api.listeners.on(this.caption,"blur",(function(t){t.target.classList.remove("cdx-input")})),n.appendChild(this.image),n.appendChild(this.caption),n}},{key:"_showImage",value:function(t){this.image.src=t,this.caption.textContent="Your label here...",this.image.parentNode.hidden=!1,this.input.parentNode.hidden=!0}},{key:"_setupSettings",value:function(){var e=this;this.settings=document.createElement("div"),this.settings.classList.add(t.CLASS.setting),this.settings.hidden=!this.input.parentNode.hidden;for(var n=function(t){var n=document.createElement("div");n.classList.add("cdx-settings-button"),n.innerHTML=e.settingsButton[t].icon,(0===t&&"left"===e.data.align||1===t&&"center"===e.data.align||2===t&&"right"===e.data.align||3===t&&e.data.hasBorder||4===t&&e.data.hasCaption)&&n.classList.add("cdx-settings-button--active"),n.addEventListener("click",(function(n){e._toggleSetting(n,t)})),e.settings.appendChild(n)},i=0;i<this.settingsButton.length;i++)n(i);return this.settings}},{key:"_toggleSetting",value:function(t,e){switch(e){case 0:case 1:case 2:this._setImageAlign(t,e);break;case 3:this._setBorder(t);break;case 4:this._showCaption(t)}}},{key:"_setImageAlign",value:function(e,n){for(var i=this.settings.childNodes,a=this.image.parentNode,r=0;r<3;r++)i[r].classList.remove("cdx-settings-button--active"),a.classList.remove(t.CLASS.align[r]);i[n].classList.add("cdx-settings-button--active"),a.classList.add(t.CLASS.align[n])}},{key:"_setBorder",value:function(t){("I"===t.target.tagName?t.target.parentNode:t.target).classList.toggle("cdx-settings-button--active"),this.image.classList.toggle("has-border")}},{key:"_showCaption",value:function(t){("I"===t.target.tagName?t.target.parentNode:t.target).classList.toggle("cdx-settings-button--active"),this.caption.hidden=!this.caption.hidden}},{key:"_isValidImageURL",value:function(e){if(null==e)return console.log("URL is undefined or null!"),!1;if(""===e)return console.log("URL is empty!"),!1;if(console.log("Validating URL Pattern"),null===this.config.urlPatterns){if(console.log("Default pattern..."),null===e.match(t.PATTERN.urlImage))return!1}else if("function"==typeof this.config.urlPatterns.test){if(console.log("Custom pattern..."),null===e.match(this.config.urlPatterns))return!1}else if("function"==typeof this.config.urlPatterns.push){console.log("Custom patterns...");for(var n=!1,i=0;i<this.config.urlPatterns.length;i++)if(null!==e.match(this.config.urlPatterns[i])){n=!0;break}return n}return console.log("Else pattern..."),!0}},{key:"save",value:function(t){var e=this.image.parentNode,n=e.classList.contains("left-aligned")?"left":e.classList.contains("center-aligned")?"center":e.classList.contains("right-aligned")?"right":"";return{url:this.input.textContent,caption:this.caption.textContent,hasCaption:!this.caption.hidden,hasBorder:this.image.classList.contains("has-border"),align:n}}}])&&i(e.prototype,n),a&&i(e,a),t}();e.default=a},function(t,e,n){var i=n(2),a=n(3);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[t.i,a,""]]);var r={insert:"head",singleton:!1},s=(i(a,r),a.locals?a.locals:{});t.exports=s},function(t,e,n){"use strict";var i,a=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},r=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),s=[];function o(t){for(var e=-1,n=0;n<s.length;n++)if(s[n].identifier===t){e=n;break}return e}function c(t,e){for(var n={},i=[],a=0;a<t.length;a++){var r=t[a],c=e.base?r[0]+e.base:r[0],l=n[c]||0,u="".concat(c," ").concat(l);n[c]=l+1;var d=o(u),f={css:r[1],media:r[2],sourceMap:r[3]};-1!==d?(s[d].references++,s[d].updater(f)):s.push({identifier:u,updater:m(f,e),references:1}),i.push(u)}return i}function l(t){var e=document.createElement("style"),i=t.attributes||{};if(void 0===i.nonce){var a=n.nc;a&&(i.nonce=a)}if(Object.keys(i).forEach((function(t){e.setAttribute(t,i[t])})),"function"==typeof t.insert)t.insert(e);else{var s=r(t.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(e)}return e}var u,d=(u=[],function(t,e){return u[t]=e,u.filter(Boolean).join("\n")});function f(t,e,n,i){var a=n?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(t.styleSheet)t.styleSheet.cssText=d(e,a);else{var r=document.createTextNode(a),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(r,s[e]):t.appendChild(r)}}function g(t,e,n){var i=n.css,a=n.media,r=n.sourceMap;if(a?t.setAttribute("media",a):t.removeAttribute("media"),r&&btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var h=null,p=0;function m(t,e){var n,i,a;if(e.singleton){var r=p++;n=h||(h=l(e)),i=f.bind(null,n,r,!1),a=f.bind(null,n,r,!0)}else n=l(e),i=g.bind(null,n,e),a=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else a()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=a());var n=c(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var i=0;i<n.length;i++){var a=o(n[i]);s[a].references--}for(var r=c(t,e),l=0;l<n.length;l++){var u=o(n[l]);0===s[u].references&&(s[u].updater(),s.splice(u,1))}n=r}}}},function(t,e,n){(e=n(4)(!1)).push([t.i,".aff-image-content .has-border {\r\n    border: solid 1px black;\r\n}\r\n.aff-image-content .left-aligned {\r\n    text-align: left;\r\n}\r\n.aff-image-content .center-aligned {\r\n    text-align: center;\r\n}\r\n.aff-image-content .right-aligned {\r\n    text-align: right;\r\n}\r\n.aff-image-figure {\r\n    max-width: 100%;\r\n}\r\n.aff-image-figure img {\r\n    max-width: 100%;\r\n}\r\n.aff-image-figure figcaption {\r\n    color: #525252;\r\n}\r\n.aff-image-setting i {\r\n    margin: 8px auto;\r\n}",""]),t.exports=e},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",i=t[3];if(!i)return n;if(e&&"function"==typeof btoa){var a=(s=i,o=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),"/*# ".concat(c," */")),r=i.sources.map((function(t){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(t," */")}));return[n].concat(r).concat([a]).join("\n")}var s,o,c;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,i){"string"==typeof t&&(t=[[null,t,""]]);var a={};if(i)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(a[s]=!0)}for(var o=0;o<t.length;o++){var c=[].concat(t[o]);i&&a[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,